<!DOCTYPE html>
<html>
<head>
<title>{{ title }}</title>
<link rel='stylesheet' href='/stylesheets/style.css' />

<script type="text/javascript">
	// Start polling the status.
	setInterval(function(){
		xmlhttp = new XMLHttpRequest();
		xmlhttp.onreadystatechange = function(){
			if(xmlhttp.readyState==4 && xmlhttp.status==200)
			{
				displayStatus(JSON.parse(xmlhttp.responseText));
			}
		};
		xmlhttp.open("GET", "/status", true);
		xmlhttp.send();
	}, 1000);

	// // Downloads the profile to the roast application.
	// function connect() {
	// 	xmlhttp = new XMLHttpRequest();
	// 	xmlhttp.onreadystatechange = function(){
	// 		if(xmlhttp.readyState==4 && xmlhttp.status==200)
	// 		{
	// 			showResponse(xmlhttp.responseText);
	// 		}
	// 	};
	// 	xmlhttp.open("GET", "/connect", true);
	// 	xmlhttp.send();
	// 	// Update the status field accordingly.
	// 	showStatus("Connecting...");
	// }

	function preheat() {
		// Build the HTTP GET params string.
		var params = "?temp="+document.getElementById("preheatTemp").value;
		// Send a GET request with the specified temp.
		xmlhttp = new XMLHttpRequest();
		xmlhttp.onreadystatechange = function(){
			if(xmlhttp.readyState==4 && xmlhttp.status==200)
			{
				showResponse(xmlhttp.responseText);
			}
		};
		xmlhttp.open("GET", "/preheat"+params, true);
		xmlhttp.send();
		// Update the status field accordingly.
		showStatus("Preheat started");
	}

	function roast() {
		// Build the HTTP GET params string.
		var params = "?p1power="+document.getElementById("p1power").value;
		params+="&p1temp="+document.getElementById("p1temp").value;
		params+="&p2power="+document.getElementById("p2power").value;
		params+="&p2temp="+document.getElementById("p2temp").value;

		// Send a GET request with the specified temp.
		xmlhttp = new XMLHttpRequest();
		xmlhttp.onreadystatechange = function(){
			if(xmlhttp.readyState==4 && xmlhttp.status==200)
			{
				showResponse(xmlhttp.responseText);
			}
		};
		xmlhttp.open("GET", "/roast"+params, true);
		xmlhttp.send();
		// Update the status field accordingly.
		showStatus("Roast started");
	}

	function stop() {
		xmlhttp = new XMLHttpRequest();
		xmlhttp.open("GET", "/stop", true);
		xmlhttp.send
		xmlhttp.send();
		document.getElementById("response").innerHTML = xmlhttp.responseText;
		showStatus("Roast stopped")
	}

	function test() {
		xmlhttp = new XMLHttpRequest();
		xmlhttp.open("GET", "/test", true);
		xmlhttp.send
		xmlhttp.send();
		document.getElementById("response").innerHTML = xmlhttp.responseText;
		showStatus("Test")
	}

	function showStatus(status) {
		document.getElementById("status").innerHTML = status;
		setTimeout(function() {
			clearStatus()
		}, 3000);
	}

	// Clears the status label.
	function clearStatus() {
		document.getElementById("status").innerHTML = "";
	}

	function showResponse(response) {
		document.getElementById("response").innerHTML = response;
		setTimeout(function(){
			clearResponse()
		}, 3000);
	}

	function clearResponse() {
		document.getElementById("response").innerHTML = "";
	}

	function displayStatus(status)
	{
		document.getElementById("connected").value = status.connected;
		document.getElementById("state").value = status.state;
		document.getElementById("targetTemp").value = status.targetTemp;
		document.getElementById("actualTemp").value = status.actualTemp;
		document.getElementById("powerLevel").value = status.powerLevel;
	}
</script>


</head>
<body>
	<h1>House Roast</h1>
	<p>Configure your roast profile here:</p>
	<table>
		<tr>
			<td>
				<table>
					<tr>
						<td>Pre-heat Temp (F)</td>
						<td><input type="number" name="preheat" id="preheatTemp" min="200" max="350"
							step="10" value="300"></td>
					</tr>
					<tr>
						<td>Phase 1 Power (%)</td>
						<td><input type="number" name="phase1Power" id="p1power" min="10"
							max="100" step="1" value="75"></td>
					</tr>		
					<tr>
						<td>Phase 1 Temp (F)</td>
						<td><input type="number" name="phase1Temp" id="p1temp" min="200"
							max="450" step="10" value="390"></td>
					</tr>
					<tr>
						<td>Phase 2 Power (%)</td>
						<td><input type="number" name="phase2Power" id="p2power" min="10" max="100"
							step="1" value="50"></td>
					</tr>		
					<tr>
						<td>Phase 2 Temp (F)</td>
						<td><input type="number" name="phase2Temp" id="p2temp" min="200"
							max="450" step="10" value="430"></td>
					</tr>
				</table>
			</td>
			<td>
				<table>
					<tr>
						<td>Connection</td>
						<td><input type="text" id="connected" min="200" max="350" step="10" value=""></td>
					</tr>
					<tr>
						<td>Roast State</td>
						<td><input type="text" id="state" min="200" max="350" step="10" value=""></td>
					</tr>	
					<tr>
						<td>Target Temperature</td>
						<td><input type="number" id="targetTemp" min="200" max="350" step="10" value=""></td>
					</tr>	
					<tr>
						<td>Actual Temperature</td>
						<td><input type="number" id="actualTemp" min="200" max="350" step="10" value=""></td>
					</tr>			
					<tr>
						<td>Power Level</td>
						<td><input type="number" id="powerLevel" min="200" max="350" step="10" value=""></td>
					</tr>						
				</table>
			</td>
		</tr>
		<tr>
			<td>
				<!-- <button type="button" onclick="connect()">Connect</button> -->
				<button type="button" onclick="preheat()">Preheat</button>
				<button type="button" onclick="roast()">Roast</button>
				<button type="button" onclick="stop()">Stop</button>
			</td>
		</tr>
	</table>
	<div id="status"></div>
	<div id="response"></div>
	<div id="connection"><div>
</body>
</html>